#CONEXION CONVENCIONAL
----------------------

#nombre de la aplicacion
spring.application.name=micro-renters
#conexion a la base de dtaos de SQL utilizando imagen de docker
spring.datasource.url=jdbc:mysql://micromysql:3306/multirenter?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC

#datos de acceso a la base de datos
spring.datasource.username=root
spring.datasource.password=Kikito01

#driver de acceso a la base de datos
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
logging.level.org.hibernate.SQL=debug


###conexion a Eureka a traves del nombre del servidor de euroka en docker despues de pasado todo
###a docker
eureka.client.service-url.defaultZone=http://microeureka-container:8761/eureka

#Se configura la probabilidad de envo de trazas por zipkin, en este caso se especifica
# que seria el 100%
spring.sleuth.sampler.probability=1.0

#Estableciendose la ruta del servidos zipkin
spring.zipkin.base-url=http://localhost:9411

#Anotacion necesarioa para el uo de RabitMQ como gestor de trazas de zipkin
spring.zipkin.sender.type=rabbit


##estableciendo los times out necesarios para que hystrix and ribbon ejecuten sus procesos
##sin afectar el uno al otro. Como hystrix envuelve a ribbon es necesario que ;la suma de
##procesos referente a ribbon no sobrepasen el tiempo necesario de hystrix, de ahi los
##60 segundos de hystrix.command.default.execution.isolation......
##y los 9 y 30 seg de ConnectTimeout and ReadTimeOut de ribbon respectivamente.
##se inicializa aqui pues zuul tambien debe ser consciente de que hay una toleracia al time out
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds:60000
ribbon.ConnectTimeout:9000
ribbon.ReadTimeout:30000
